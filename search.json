[{"title":"java","url":"/2019/03/11/java/"},{"title":"maven Invalid bound statement","url":"/2018/12/10/maven问题/","content":"## 问题\n昨天在使用maven构建mybatis+spring boot项目时:出现了\n> org.apache.ibatis.binding.BindingException: Invalid bound statement (not found) exception\n\n## 网上总结的一般原因  \nMapper interface和xml文件的定义对应不上，需要检查包名，namespace，函数名称等能否对应上。  \n按以下步骤一一执行：  \n1、检查xml文件所在的package名称是否和interface对应的package名称一一对应  \n2、检查xml文件的namespace是否和xml文件的package名称一一对应  \n3、检查函数名称能否对应上  \n4、去掉xml文件中的中文注释  \n5、随意在xml文件中加一个空格或者空行然后保存\n但是在我检查完上述步骤后，并没有发现所谓错误。于是我查看了编译后的target文件夹发现，在文件夹中并没有使用的mapper文件，于是我在网上查看了一下资料发现maven项目默认不会编译Java文件夹里的代码，而是集中编译resources文件夹。\n## 解决方案\n\n### 解决方法一\n使用项目路径下resources文件夹,把所有的配置文件都放到resources中管理.\n![](http://xiaosmie-blog-img.oss-cn-beijing.aliyuncs.com/18-12-10/31244278.jpg)\n### 解决方法二\n在pom文件中添加指定资源目录\n```\n  <build>\n        ...\n        <resources>\n            ...\n            <!--指定xml文件位置-->\n            <resource>\n                <directory>src/main/java</directory>\n                <includes>\n                    <include>**/*.xml</include>\n                </includes>\n                <filtering>true</filtering>\n            </resource>\n        </resources>\n    </build>\n```\n","tags":["maven"]},{"title":"Java二维数组引用","url":"/2018/08/24/Java二维数组引用/","content":"\n## 问题\n\n&emsp;&emsp;今天在使用eclipse编写Java代码时出现了很有意思的问题，在使用数组的clone方法对二维数组进行克隆后修改克隆后的数组，原数组也会发生改变，类似引用类型的引用。\n## Photo\n\n![测试代码](https://xiaosmie-blog-img.oss-cn-beijing.aliyuncs.com/18-8-24/81188676.jpg)\n\n## 原因\n\n在网上找到的解释:clone方法再拷贝二维数组是其实是把二维数组中的一维数组引用给了新的数组。\n\n> Java跟C/C++一样，没有二维数组，二维数组是一维数组的一维数组，用int[][] c =\n> a.clone()，实际上是把a[0]，a[1]，a[2]给clone了一份给c，也就是把每一行的一维数组的引用拷贝了一份给c，但是这些引用所指向的内存空间还是原来那一块，并不是彻底的深拷贝，在后续对c的操作中还是会同时作用在a上。因此应该对每一行的一维数组分别进行clone，才是彻底的深拷贝。\n![example picture](https://img-blog.csdn.net/20170208110119634)\n","tags":["Java"]},{"title":"vue后续","url":"/2018/08/07/vue后续/","content":"# Vue路由\nrouter-link 相当于就是超链。to 相当于就是 href\n`<router-link to=\"/user\">用户管理</router-link>`\n# Vue Ajax\n1. Jquery ajax\n2. fetch.js\n3. axios.js\n","tags":["js"]},{"title":"vue初步学习","url":"/2018/08/06/vue初步学习/","content":"# 什么是Vue\n>考虑这个需求： 我们要把一个 json对象的数据，显示到一个元素上去。\n>如果不使用 Vue, 那么就会用到 JS 或者 JQuery，通过操作 HTML DOM 的方式，把数据显示上去。\n>如果使用Vue, 那么仅仅需要提供数据，以及数据要绑定到的元素的id,就行了,不需要显式地操作HTML DOM。\n# Vue的语法\n1. 条件语句\n\t+ v-if\n\t+ v-else\n\t+ v-else-if\n2. 循环语句\nv-for循环语句\n3. 属性绑定\nv-bind\n4. 双向绑定\nv-model\n5. 监听属性\nwatch\n# 过滤器\n定义全局过滤器，后添加过滤器名称\n# Vue component\nvue组件定义全局组件\n","tags":["js"]}]